// <auto-generated />
using System;
using Lab13.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab13.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20211202043703_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab13.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfHire")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateTime(1956, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ada",
                            LastName = "Lovelace",
                            ManagerId = 0
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateTime(1990, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2018, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jimbo",
                            LastName = "Magilicutty",
                            ManagerId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateTime(1984, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2012, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mike",
                            LastName = "Wazowski",
                            ManagerId = 1
                        });
                });

            modelBuilder.Entity("Lab13.Models.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("SalesId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SalesId = 1,
                            Amount = 23456.0,
                            EmployeeId = 2,
                            Quarter = 4,
                            Year = 2019
                        },
                        new
                        {
                            SalesId = 2,
                            Amount = 34567.0,
                            EmployeeId = 2,
                            Quarter = 1,
                            Year = 2020
                        },
                        new
                        {
                            SalesId = 3,
                            Amount = 43221.0,
                            EmployeeId = 3,
                            Quarter = 2,
                            Year = 2019
                        },
                        new
                        {
                            SalesId = 4,
                            Amount = 53444.0,
                            EmployeeId = 3,
                            Quarter = 2,
                            Year = 2020
                        },
                        new
                        {
                            SalesId = 5,
                            Amount = 12344.0,
                            EmployeeId = 1,
                            Quarter = 3,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("Lab13.Models.Sales", b =>
                {
                    b.HasOne("Lab13.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
